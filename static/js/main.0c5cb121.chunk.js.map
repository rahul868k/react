{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputList","setInputList","items","setItems","className","type","placeholder","value","onChange","e","target","onClick","preventDefault","push","length","map","item","index","alert","console","log","newList","splice","deleteItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOA6DeA,EAzDH,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAsBA,OACE,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,kDAAf,UACE,uBACA,2CACA,uBACA,sBAAKA,UAAU,OAAf,UACE,uBAAOC,KAAK,OAAOC,YAAY,iBAAiBC,MAAOP,EAAWQ,SA3B1D,SAACC,GACjBR,EAAaQ,EAAEC,OAAOH,UA2Bd,yBAAQH,UAAU,SAASO,QAxBrB,SAACF,GACfA,EAAEG,iBACFV,EAAMW,KAAKb,GACXG,EAAS,YAAID,IACbD,EAAa,KAoBL,kBAAmDC,EAAMY,OAAS,EAAlE,UAEF,6BACGZ,EAAMa,KAAI,SAACC,EAAMC,GAEhB,OACE,mCACE,sBAAKb,UAAU,aAAf,UACE,mCAAkBY,EAAlB,MAASC,GAET,mBAAGb,UAAU,0BAA0BO,QAAS,kBA3B9C,SAACM,GACnBC,MAAM,mCACNC,QAAQC,IAAI,WACZ,IAAIC,EAAUnB,EACdmB,EAAQC,OAAOL,EAAO,GACtBd,EAAS,YAAIkB,IAsByDE,CAAYN,wBCnCvEO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0c5cb121.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\n\n\nconst App = () => {\n  const [inputList, setInputList] = useState(\"\")\n  const [items, setItems] = useState([])\n\n\n  const itemEvent = (e) => {\n    setInputList(e.target.value)\n  }\n\n  const addTodo = (e) => {\n    e.preventDefault()\n    items.push(inputList)\n    setItems([...items])\n    setInputList(\"\")\n  }\n\n  const deleteItems = (index) => {\n    alert('do you want to delete this item')\n    console.log('deleted')\n    var newList = items;\n    newList.splice(index, 1);\n    setItems([...newList])\n  }\n\n  return (\n    <>\n      <div className=\"main_div\">\n        <div className=\"container col-xl-3 col-lg-4 col-md-6 center_div\">\n          <br />\n          <h1>Todo List</h1>\n          <br />\n          <div className=\"form\">\n            <input type=\"text\" placeholder=\"Add your todo \" value={inputList} onChange={itemEvent} />\n            <button className=\"newBtn\" onClick={addTodo}>Add #{items.length + 1} </button>\n          </div>\n          <ol>\n            {items.map((item, index) => {\n\n              return (\n                <>\n                  <div className=\"todo_style\">\n                    <li key={index}> {item} </li>\n\n                    <i className=\"fas fa-times deleteIcon\" onClick={() => deleteItems(index)}></i>\n                  </div>\n                </>\n              )\n            })}\n          </ol>\n        </div>\n\n      </div>\n    </>\n  )\n}\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}